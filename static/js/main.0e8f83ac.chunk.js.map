{"version":3,"sources":["components/GoodList.tsx","App.tsx","index.tsx"],"names":["GoodList","state","isReversed","sortBy","reverse","setState","sortAlphabetically","sortByLength","reset","this","goods","props","sort","g1","g2","localeCompare","length","type","onClick","className","map","good","React","Component","goodsFromServer","App","isVisible","showList","ReactDOM","render","document","getElementById"],"mappings":"4OAYaA,EAAb,4MACEC,MAAe,CACbC,YAAY,EACZC,OAAQ,IAHZ,EAMEC,QAAU,WACR,EAAKC,UAAS,SAACJ,GAAD,MAAY,CAAEC,YAAaD,EAAMC,gBAPnD,EAUEI,mBAAqB,WACnB,EAAKD,SAAS,CAAEF,OAAQ,oBAX5B,EAcEI,aAAe,WACb,EAAKF,SAAS,CAAEF,OAAQ,YAf5B,EAkBEK,MAAQ,WACN,EAAKH,SAAS,CACZF,OAAQ,MApBd,4CAwBE,WACE,MAA+BM,KAAKR,MAA5BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,OAEZO,EAAUD,KAAKE,MAAfD,MAmBR,OAjBAA,EAAME,MAAK,SAACC,EAAIC,GACd,OAAQX,GACN,IAAK,iBACH,OAAOU,EAAGE,cAAcD,GAE1B,IAAK,SACH,OAAOD,EAAGG,OAASF,EAAGE,OAExB,QACE,OAAO,MAITd,GACFQ,EAAMN,UAIN,qCACE,wBAAQa,KAAK,SAASC,QAAST,KAAKL,QAApC,qBACA,wBAAQa,KAAK,SAASC,QAAST,KAAKH,mBAApC,iCACA,wBAAQW,KAAK,SAASC,QAAST,KAAKF,aAApC,4BACA,wBAAQU,KAAK,SAASC,QAAST,KAAKD,MAApC,mBACA,qBAAKW,UAAU,QAAf,SACGT,EAAMU,KAAI,SAAAC,GAAI,OACb,8BAAMA,gBAtDlB,GAA8BC,IAAMC,WCP9BC,EAA0B,CAC9B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJxB,MAAe,CACbyB,WAAW,G,EAGbC,SAAW,WACT,EAAKtB,SAAS,CACZqB,WAAW,K,4CAIf,WACE,IAAQA,EAAcjB,KAAKR,MAAnByB,UAER,OACE,sCACIA,GACA,wBAAQT,KAAK,SAASC,QAAST,KAAKkB,SAApC,mBAGDD,GACC,qCACE,uCACA,8BACE,cAAC,EAAD,CAAUhB,MAAOc,gB,GAxBbF,IAAMC,WAiCTE,ICpDfG,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0e8f83ac.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './Good';\n\ninterface Props {\n  goods: Good[];\n}\n\ntype State = {\n  isReversed: boolean,\n  sortBy: string,\n};\n\nexport class GoodList extends React.Component<Props, State> {\n  state: State = {\n    isReversed: false,\n    sortBy: '',\n  };\n\n  reverse = () => {\n    this.setState((state) => ({ isReversed: !state.isReversed }));\n  };\n\n  sortAlphabetically = () => {\n    this.setState({ sortBy: 'alphabetically' });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortBy: 'length' });\n  };\n\n  reset = () => {\n    this.setState({\n      sortBy: '',\n    });\n  };\n\n  render() {\n    const { isReversed, sortBy } = this.state;\n\n    const { goods } = this.props;\n\n    goods.sort((g1, g2) => {\n      switch (sortBy) {\n        case 'alphabetically':\n          return g1.localeCompare(g2);\n\n        case 'length':\n          return g1.length - g2.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      goods.reverse();\n    }\n\n    return (\n      <>\n        <button type=\"button\" onClick={this.reverse}>Reverse</button>\n        <button type=\"button\" onClick={this.sortAlphabetically}>Sort alphabetically</button>\n        <button type=\"button\" onClick={this.sortByLength}>Sort by length</button>\n        <button type=\"button\" onClick={this.reset}>Reset</button>\n        <div className=\"goods\">\n          {goods.map(good => (\n            <div>{good}</div>\n          ))}\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport { Good } from './components/Good';\nimport { GoodList } from './components/GoodList';\n\nconst goodsFromServer: Good[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  isVisible: boolean;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    isVisible: false,\n  };\n\n  showList = () => {\n    this.setState({\n      isVisible: true,\n    });\n  };\n\n  render() {\n    const { isVisible } = this.state;\n\n    return (\n      <>\n        {!isVisible && (\n          <button type=\"button\" onClick={this.showList}>start</button>\n        )}\n\n        {isVisible && (\n          <>\n            <h1>Goods</h1>\n            <div>\n              <GoodList goods={goodsFromServer} />\n            </div>\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}